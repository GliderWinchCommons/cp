package glasscontrolpanel;


import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.*;
import javax.imageio.ImageIO;

/**
 *
 * @author Matt Dargen
 * @modifications: Johnny White
 */
public class StateMachineDiagram extends javax.swing.JPanel {

    /**
     * Creates new form StateMachineDiagram
     */
    
    JTextField last = new JTextField();
    
    public StateMachineDiagram() {
        statePics = new HashMap<>();
        loadPictures();
        initComponents();
    }
    
    public void updateState(int state){
        
        stateLabel.setIcon(statePics.get(state));
    }
    
    private void loadPictures()
    {
        statePics.put(0, new ImageIcon(getClass().getResource("/glasscontrolpanel/safe.png")));
        statePics.put(1, new ImageIcon(getClass().getResource("/glasscontrolpanel/prep.png")));
        statePics.put(2, new ImageIcon(getClass().getResource("/glasscontrolpanel/armed.png")));
        statePics.put(3, new ImageIcon(getClass().getResource("/glasscontrolpanel/profile.png")));
        statePics.put(4, new ImageIcon(getClass().getResource("/glasscontrolpanel/ramp.png")));
        statePics.put(5, new ImageIcon(getClass().getResource("/glasscontrolpanel/constant.png")));
        statePics.put(6, new ImageIcon(getClass().getResource("/glasscontrolpanel/recovery.png")));
        statePics.put(7, new ImageIcon(getClass().getResource("/glasscontrolpanel/retrieve.png")));
        statePics.put(14, new ImageIcon(getClass().getResource("/glasscontrolpanel/stop.png")));
        statePics.put(15, new ImageIcon(getClass().getResource("/glasscontrolpanel/abort.png")));
    }
    
/*    public String stateIntToString(int state)
    {
        switch(state)
        {
            case 0:
                return "safe";
            case 1:
                return "prep";
            case 2:
                return "armed";
            case 3:
                return "profile";
            case 4:
                return "ramp";
            case 5:
                return "constant";
            case 6:
                return "recovery";
            case 7:
                return "retrieve";
            case 14:
                return "stop";
            case 15:
                return "abort";
            default:
                return "";
        }
    }*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        stateLabel = new javax.swing.JLabel();
        stateLabel.setIcon(statePics.get(0)); // NOI18N
        //System.out.println(statePics.get(0).getIconHeight());
        //System.out.println(statePics.get(0).getIconWidth());
        add(stateLabel, BorderLayout.CENTER);

        /*jToggleButton1 = new javax.swing.JToggleButton();

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });*/


        /*jToggleButton1.setText("random");
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });*/
        
        //setBackground(Color.BLUE);
        /*javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(stateLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addContainerGap(23, Short.MAX_VALUE))
        );*/
        //add(new JLabel("HEY"), BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    
    }//GEN-LAST:event_formKeyPressed

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
        //updateState(getRandomState());
    }//GEN-LAST:event_jToggleButton1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel stateLabel;
    private HashMap<Integer,ImageIcon> statePics;
    // End of variables declaration//GEN-END:variables
}
